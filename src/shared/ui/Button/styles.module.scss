.button {
	display: inline-flex;
	align-items: center;
	justify-content: center;

	line-height: 1.2;
	font-weight: 500;
	white-space: nowrap;

	transition:
		transform var(--button-transition-duration) ease,
		background var(--button-transition-duration) ease,
		color var(--button-transition-duration) ease;
}

$sizes: (20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64);

@each $size in $sizes {
	$sizes-gap-map: (
		48: 1rem,
		32: 0.9375rem,
		24: 0.8125rem,
		default: 0.6875rem,
	);
	$fontSize: if(
		$size > 48,
		map-get($sizes-gap-map, 48),
		if(
			$size > 32,
			map-get($sizes-gap-map, 32),
			if(
				$size > 24,
				map-get($sizes-gap-map, 24),
				map-get($sizes-gap-map, default)
			)
		)
	);

	$index: index($sizes, $size) - 1; // Индекс начинается с 1, поэтому вычитаем 1
	$padding: 10px + $index * 2px;
	$gap: if($size >= 48, 8px, if($size >= 32, 6px, 4px));

	.size_#{$size} {
		min-height: #{$size}px;
		font-size: $fontSize;
		padding: 0 #{$padding};
		gap: #{$gap};
	}
}

@each $size in $sizes {
	.circle {
		&.size_#{$size} {
			width: #{$size}px;
		}
		border-radius: 50%;
		padding: 0;
	}
}

.rounded {
	border-radius: 9999px;
}

.borderRadius_8 {
	border-radius: var(--border-radius-default);
}

.borderRadius_16 {
	border-radius: var(--border-radius-secondary);
}

.maxWidth {
	width: 100%;
}

.maxHeight {
	height: 100%;
}

.withoutPadding {
	padding: 0;
}

.rowReverse {
	flex-direction: row-reverse;
}

.columnReverse {
	flex-direction: column-reverse;
}

.select {
	background: var(--button-default-color);
	@media (any-hover: hover) {
		&:hover {
			background: var(--button-default-color-intense);
		}
	}

	&:focus {
		background: var(--button-default-color-intense);
	}
	justify-content: space-between;

	text-align: left;
}

.primary {
	background: var(--button-default-color);

	@media (any-hover: hover) {
		&:hover {
			transform: scale(1.05) translateZ(0);
			background: var(--button-default-color-intense);
		}
	}

	&:focus {
		transform: scale(1.05) translateZ(0);
		background: var(--button-default-color-intense);
	}
}

.gradient {
	background: linear-gradient(
		135deg,
		var(--kp-main-color) 69.93%,
		var(--kp-secondary-color)
	);
	color: #fff;

	@media (any-hover: hover) {
		&:hover {
			transform: scale(1.05) translateZ(0);
			background: linear-gradient(
				135deg,
				var(--kp-main-color) 75%,
				var(--kp-secondary-color)
			);
		}
	}

	&:focus {
		transform: scale(1.05) translateZ(0);
		background: linear-gradient(
			135deg,
			var(--kp-main-color) 75%,
			var(--kp-secondary-color)
		);
	}
}

.primary,
.gradient {
	font-weight: 600;
}

.textBelow {
	flex-direction: column;
}

.list {
	text-align: left;
	justify-content: space-between;

	@media (any-hover: hover) {
		&:hover {
			background: var(--button-default-color);
		}
	}

	&:focus {
		background: var(--button-default-color);
	}
}

.modal {
	border-bottom: 0.0625rem solid var(--delimiter-color);
	gap: 1.25rem;
}

.moreButton {
	font-weight: 600;
	color: var(--kp-main-color);
}

.outlineWhite {
	border: 0.125em solid #fff;
	color: #fff;
	background: transparent;

	@media (any-hover: hover) {
		&:hover {
			background: #fff;
			color: var(--error-background-color);
		}
	}

	&:focus {
		background: #fff;
		color: var(--error-background-color);
	}
}
